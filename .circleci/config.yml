version: 2

# slackの通知設定
orbs:
  slack: circleci/slack@3.4.2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          - BUNDLER_VERSION: 2.1.4
          - RAILS_ENV: 'test'
      
      - image: circleci/mysql:5.6
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '127.0.0.1'

    working_directory: ~/izakaya_app

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # database.ymlとdatavase.yml.ciを入れ替える
      - run: mv config/database.yml.ci config/database.yml

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      #rubocopを走らせる
      # - run:
      #     name: Rubocop 
      #     command: bundle exec rubocop

      # rsepecを走らせる
      # - run:
      #     name: RSpec
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"

      #       bundle exec rspec \
      #         --format progress \
      #         --format RspecJunitFormatter \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - "ce:d8:e6:b0:29:ea:5a:2b:15:3b:bd:0b:83:a1:8e:5a"

      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy
          # slackの通知設定
          excutor: container
          steps:
            - checkout
            - run: ./deploy.sh
            - slack/status:
                success_message: ':circleci-pass: $CIRCLE_BRANCH のデプロイが完了しました\n:github_octocat: User：$CIRCLE_USERNAME'
                failure_message: ':circleci-fail: $CIRCLE_BRANCH のデプロイが失敗しました\n:github_octocat: User：$CIRCLE_USERNAME'
                webhook: '${SLACK_WEBHOOK}'